<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoql.mapper.ShopOrderMapper">
  <resultMap id="BaseResultMap" type="com.xiaoql.entity.ShopOrder">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="shop_id" jdbcType="VARCHAR" property="shopId" />
    <result column="shop_phone" jdbcType="VARCHAR" property="shopPhone" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="shop_address" jdbcType="VARCHAR" property="shopAddress" />
    <result column="shop_lng" jdbcType="VARCHAR" property="shopLng" />
    <result column="shop_lat" jdbcType="VARCHAR" property="shopLat" />
    <result column="recipient_name" jdbcType="VARCHAR" property="recipientName" />
    <result column="recipient_phone" jdbcType="VARCHAR" property="recipientPhone" />
    <result column="recipient_address" jdbcType="VARCHAR" property="recipientAddress" />
    <result column="recipient_lng" jdbcType="VARCHAR" property="recipientLng" />
    <result column="recipient_lat" jdbcType="VARCHAR" property="recipientLat" />
    <result column="shipping_fee" jdbcType="DOUBLE" property="shippingFee" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="rider_id" jdbcType="VARCHAR" property="riderId" />
    <result column="rider_name" jdbcType="VARCHAR" property="riderName" />
    <result column="rider_phone" jdbcType="VARCHAR" property="riderPhone" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="rider_assign_time" jdbcType="TIMESTAMP" property="riderAssignTime" />
    <result column="rider_read_time" jdbcType="TIMESTAMP" property="riderReadTime" />
    <result column="rider_get_goods_time" jdbcType="TIMESTAMP" property="riderGetGoodsTime" />
    <result column="rider_get_goods_lng" jdbcType="VARCHAR" property="riderGetGoodsLng" />
    <result column="rider_get_goods_lat" jdbcType="VARCHAR" property="riderGetGoodsLat" />
    <result column="rider_complete_time" jdbcType="TIMESTAMP" property="riderCompleteTime" />
    <result column="rider_complete_lng" jdbcType="VARCHAR" property="riderCompleteLng" />
    <result column="rider_complete_lat" jdbcType="VARCHAR" property="riderCompleteLat" />
    <result column="rider_coast" jdbcType="INTEGER" property="riderCoast" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, time, shop_id, shop_phone, shop_name, shop_address, shop_lng, shop_lat, recipient_name, 
    recipient_phone, recipient_address, recipient_lng, recipient_lat, shipping_fee, total, 
    rider_id, rider_name, rider_phone, status, rider_assign_time, rider_read_time, rider_get_goods_time, 
    rider_get_goods_lng, rider_get_goods_lat, rider_complete_time, rider_complete_lng, 
    rider_complete_lat, rider_coast
  </sql>
  <select id="selectByExample" parameterType="com.xiaoql.entity.ShopOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from shop_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoql.entity.ShopOrderExample">
    delete from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoql.entity.ShopOrder">
    insert into shop_order (id, time, shop_id, 
      shop_phone, shop_name, shop_address, 
      shop_lng, shop_lat, recipient_name, 
      recipient_phone, recipient_address, recipient_lng, 
      recipient_lat, shipping_fee, total, 
      rider_id, rider_name, rider_phone, 
      status, rider_assign_time, rider_read_time, 
      rider_get_goods_time, rider_get_goods_lng, 
      rider_get_goods_lat, rider_complete_time, 
      rider_complete_lng, rider_complete_lat, rider_coast
      )
    values (#{id,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{shopId,jdbcType=VARCHAR}, 
      #{shopPhone,jdbcType=VARCHAR}, #{shopName,jdbcType=VARCHAR}, #{shopAddress,jdbcType=VARCHAR}, 
      #{shopLng,jdbcType=VARCHAR}, #{shopLat,jdbcType=VARCHAR}, #{recipientName,jdbcType=VARCHAR}, 
      #{recipientPhone,jdbcType=VARCHAR}, #{recipientAddress,jdbcType=VARCHAR}, #{recipientLng,jdbcType=VARCHAR}, 
      #{recipientLat,jdbcType=VARCHAR}, #{shippingFee,jdbcType=DOUBLE}, #{total,jdbcType=DOUBLE}, 
      #{riderId,jdbcType=VARCHAR}, #{riderName,jdbcType=VARCHAR}, #{riderPhone,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{riderAssignTime,jdbcType=TIMESTAMP}, #{riderReadTime,jdbcType=TIMESTAMP}, 
      #{riderGetGoodsTime,jdbcType=TIMESTAMP}, #{riderGetGoodsLng,jdbcType=VARCHAR}, 
      #{riderGetGoodsLat,jdbcType=VARCHAR}, #{riderCompleteTime,jdbcType=TIMESTAMP}, 
      #{riderCompleteLng,jdbcType=VARCHAR}, #{riderCompleteLat,jdbcType=VARCHAR}, #{riderCoast,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoql.entity.ShopOrder">
    insert into shop_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopPhone != null">
        shop_phone,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="shopAddress != null">
        shop_address,
      </if>
      <if test="shopLng != null">
        shop_lng,
      </if>
      <if test="shopLat != null">
        shop_lat,
      </if>
      <if test="recipientName != null">
        recipient_name,
      </if>
      <if test="recipientPhone != null">
        recipient_phone,
      </if>
      <if test="recipientAddress != null">
        recipient_address,
      </if>
      <if test="recipientLng != null">
        recipient_lng,
      </if>
      <if test="recipientLat != null">
        recipient_lat,
      </if>
      <if test="shippingFee != null">
        shipping_fee,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="riderId != null">
        rider_id,
      </if>
      <if test="riderName != null">
        rider_name,
      </if>
      <if test="riderPhone != null">
        rider_phone,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="riderAssignTime != null">
        rider_assign_time,
      </if>
      <if test="riderReadTime != null">
        rider_read_time,
      </if>
      <if test="riderGetGoodsTime != null">
        rider_get_goods_time,
      </if>
      <if test="riderGetGoodsLng != null">
        rider_get_goods_lng,
      </if>
      <if test="riderGetGoodsLat != null">
        rider_get_goods_lat,
      </if>
      <if test="riderCompleteTime != null">
        rider_complete_time,
      </if>
      <if test="riderCompleteLng != null">
        rider_complete_lng,
      </if>
      <if test="riderCompleteLat != null">
        rider_complete_lat,
      </if>
      <if test="riderCoast != null">
        rider_coast,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="shopPhone != null">
        #{shopPhone,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopAddress != null">
        #{shopAddress,jdbcType=VARCHAR},
      </if>
      <if test="shopLng != null">
        #{shopLng,jdbcType=VARCHAR},
      </if>
      <if test="shopLat != null">
        #{shopLat,jdbcType=VARCHAR},
      </if>
      <if test="recipientName != null">
        #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="recipientPhone != null">
        #{recipientPhone,jdbcType=VARCHAR},
      </if>
      <if test="recipientAddress != null">
        #{recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="recipientLng != null">
        #{recipientLng,jdbcType=VARCHAR},
      </if>
      <if test="recipientLat != null">
        #{recipientLat,jdbcType=VARCHAR},
      </if>
      <if test="shippingFee != null">
        #{shippingFee,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="riderId != null">
        #{riderId,jdbcType=VARCHAR},
      </if>
      <if test="riderName != null">
        #{riderName,jdbcType=VARCHAR},
      </if>
      <if test="riderPhone != null">
        #{riderPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="riderAssignTime != null">
        #{riderAssignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderReadTime != null">
        #{riderReadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderGetGoodsTime != null">
        #{riderGetGoodsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderGetGoodsLng != null">
        #{riderGetGoodsLng,jdbcType=VARCHAR},
      </if>
      <if test="riderGetGoodsLat != null">
        #{riderGetGoodsLat,jdbcType=VARCHAR},
      </if>
      <if test="riderCompleteTime != null">
        #{riderCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderCompleteLng != null">
        #{riderCompleteLng,jdbcType=VARCHAR},
      </if>
      <if test="riderCompleteLat != null">
        #{riderCompleteLat,jdbcType=VARCHAR},
      </if>
      <if test="riderCoast != null">
        #{riderCoast,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoql.entity.ShopOrderExample" resultType="java.lang.Long">
    select count(*) from shop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=VARCHAR},
      </if>
      <if test="record.shopPhone != null">
        shop_phone = #{record.shopPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.shopAddress != null">
        shop_address = #{record.shopAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.shopLng != null">
        shop_lng = #{record.shopLng,jdbcType=VARCHAR},
      </if>
      <if test="record.shopLat != null">
        shop_lat = #{record.shopLat,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientName != null">
        recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientPhone != null">
        recipient_phone = #{record.recipientPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientAddress != null">
        recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientLng != null">
        recipient_lng = #{record.recipientLng,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientLat != null">
        recipient_lat = #{record.recipientLat,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingFee != null">
        shipping_fee = #{record.shippingFee,jdbcType=DOUBLE},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.riderId != null">
        rider_id = #{record.riderId,jdbcType=VARCHAR},
      </if>
      <if test="record.riderName != null">
        rider_name = #{record.riderName,jdbcType=VARCHAR},
      </if>
      <if test="record.riderPhone != null">
        rider_phone = #{record.riderPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.riderAssignTime != null">
        rider_assign_time = #{record.riderAssignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.riderReadTime != null">
        rider_read_time = #{record.riderReadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.riderGetGoodsTime != null">
        rider_get_goods_time = #{record.riderGetGoodsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.riderGetGoodsLng != null">
        rider_get_goods_lng = #{record.riderGetGoodsLng,jdbcType=VARCHAR},
      </if>
      <if test="record.riderGetGoodsLat != null">
        rider_get_goods_lat = #{record.riderGetGoodsLat,jdbcType=VARCHAR},
      </if>
      <if test="record.riderCompleteTime != null">
        rider_complete_time = #{record.riderCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.riderCompleteLng != null">
        rider_complete_lng = #{record.riderCompleteLng,jdbcType=VARCHAR},
      </if>
      <if test="record.riderCompleteLat != null">
        rider_complete_lat = #{record.riderCompleteLat,jdbcType=VARCHAR},
      </if>
      <if test="record.riderCoast != null">
        rider_coast = #{record.riderCoast,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_order
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      shop_id = #{record.shopId,jdbcType=VARCHAR},
      shop_phone = #{record.shopPhone,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      shop_address = #{record.shopAddress,jdbcType=VARCHAR},
      shop_lng = #{record.shopLng,jdbcType=VARCHAR},
      shop_lat = #{record.shopLat,jdbcType=VARCHAR},
      recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      recipient_phone = #{record.recipientPhone,jdbcType=VARCHAR},
      recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
      recipient_lng = #{record.recipientLng,jdbcType=VARCHAR},
      recipient_lat = #{record.recipientLat,jdbcType=VARCHAR},
      shipping_fee = #{record.shippingFee,jdbcType=DOUBLE},
      total = #{record.total,jdbcType=DOUBLE},
      rider_id = #{record.riderId,jdbcType=VARCHAR},
      rider_name = #{record.riderName,jdbcType=VARCHAR},
      rider_phone = #{record.riderPhone,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      rider_assign_time = #{record.riderAssignTime,jdbcType=TIMESTAMP},
      rider_read_time = #{record.riderReadTime,jdbcType=TIMESTAMP},
      rider_get_goods_time = #{record.riderGetGoodsTime,jdbcType=TIMESTAMP},
      rider_get_goods_lng = #{record.riderGetGoodsLng,jdbcType=VARCHAR},
      rider_get_goods_lat = #{record.riderGetGoodsLat,jdbcType=VARCHAR},
      rider_complete_time = #{record.riderCompleteTime,jdbcType=TIMESTAMP},
      rider_complete_lng = #{record.riderCompleteLng,jdbcType=VARCHAR},
      rider_complete_lat = #{record.riderCompleteLat,jdbcType=VARCHAR},
      rider_coast = #{record.riderCoast,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoql.entity.ShopOrder">
    update shop_order
    <set>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="shopPhone != null">
        shop_phone = #{shopPhone,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopAddress != null">
        shop_address = #{shopAddress,jdbcType=VARCHAR},
      </if>
      <if test="shopLng != null">
        shop_lng = #{shopLng,jdbcType=VARCHAR},
      </if>
      <if test="shopLat != null">
        shop_lat = #{shopLat,jdbcType=VARCHAR},
      </if>
      <if test="recipientName != null">
        recipient_name = #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="recipientPhone != null">
        recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
      </if>
      <if test="recipientAddress != null">
        recipient_address = #{recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="recipientLng != null">
        recipient_lng = #{recipientLng,jdbcType=VARCHAR},
      </if>
      <if test="recipientLat != null">
        recipient_lat = #{recipientLat,jdbcType=VARCHAR},
      </if>
      <if test="shippingFee != null">
        shipping_fee = #{shippingFee,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="riderId != null">
        rider_id = #{riderId,jdbcType=VARCHAR},
      </if>
      <if test="riderName != null">
        rider_name = #{riderName,jdbcType=VARCHAR},
      </if>
      <if test="riderPhone != null">
        rider_phone = #{riderPhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="riderAssignTime != null">
        rider_assign_time = #{riderAssignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderReadTime != null">
        rider_read_time = #{riderReadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderGetGoodsTime != null">
        rider_get_goods_time = #{riderGetGoodsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderGetGoodsLng != null">
        rider_get_goods_lng = #{riderGetGoodsLng,jdbcType=VARCHAR},
      </if>
      <if test="riderGetGoodsLat != null">
        rider_get_goods_lat = #{riderGetGoodsLat,jdbcType=VARCHAR},
      </if>
      <if test="riderCompleteTime != null">
        rider_complete_time = #{riderCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="riderCompleteLng != null">
        rider_complete_lng = #{riderCompleteLng,jdbcType=VARCHAR},
      </if>
      <if test="riderCompleteLat != null">
        rider_complete_lat = #{riderCompleteLat,jdbcType=VARCHAR},
      </if>
      <if test="riderCoast != null">
        rider_coast = #{riderCoast,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoql.entity.ShopOrder">
    update shop_order
    set time = #{time,jdbcType=TIMESTAMP},
      shop_id = #{shopId,jdbcType=VARCHAR},
      shop_phone = #{shopPhone,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      shop_address = #{shopAddress,jdbcType=VARCHAR},
      shop_lng = #{shopLng,jdbcType=VARCHAR},
      shop_lat = #{shopLat,jdbcType=VARCHAR},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
      recipient_address = #{recipientAddress,jdbcType=VARCHAR},
      recipient_lng = #{recipientLng,jdbcType=VARCHAR},
      recipient_lat = #{recipientLat,jdbcType=VARCHAR},
      shipping_fee = #{shippingFee,jdbcType=DOUBLE},
      total = #{total,jdbcType=DOUBLE},
      rider_id = #{riderId,jdbcType=VARCHAR},
      rider_name = #{riderName,jdbcType=VARCHAR},
      rider_phone = #{riderPhone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      rider_assign_time = #{riderAssignTime,jdbcType=TIMESTAMP},
      rider_read_time = #{riderReadTime,jdbcType=TIMESTAMP},
      rider_get_goods_time = #{riderGetGoodsTime,jdbcType=TIMESTAMP},
      rider_get_goods_lng = #{riderGetGoodsLng,jdbcType=VARCHAR},
      rider_get_goods_lat = #{riderGetGoodsLat,jdbcType=VARCHAR},
      rider_complete_time = #{riderCompleteTime,jdbcType=TIMESTAMP},
      rider_complete_lng = #{riderCompleteLng,jdbcType=VARCHAR},
      rider_complete_lat = #{riderCompleteLat,jdbcType=VARCHAR},
      rider_coast = #{riderCoast,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>